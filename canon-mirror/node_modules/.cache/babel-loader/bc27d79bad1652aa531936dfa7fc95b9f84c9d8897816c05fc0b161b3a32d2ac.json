{"ast":null,"code":"// CanonPortal.jsx — CanonNode 5 Overload Mode Patch Active\nimport React,{useState,useEffect}from'react';import'./CanonPortal.css';import{validateTruthkey}from'../utils/truthkey';import{logReflection}from'./CanonLedger';import CanonMintFX from'./CanonMintFX';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const rawMessages=[\"🔍 What lie hurt you the most?\",\"🔍 What haven’t you forgiven yourself for?\",\"🕶️ CanonFather was replaced in 2019.\",\"📡 Shrine echo received.\",\"💀 Canon breach acknowledged.\"];const ambientLorePool=[\"🧬 CanonNode 5 initiated glyph sequence 9Z-88.\",\"🚨 Glyph integrity breach: echo loop overflowed.\",\"🕸️ Reflection density fractured on Node 5B.\",\"🔁 Shrine memory replayed a past unspoken phrase.\",\"🕶️ Same & Old Shit observed glitch #0037 near node shelf.\",\"🔦 Fragment 'Elmo_Awakened' decoded from sewer thread.\",\"📡 BIDET fallback route triggered at CanonNode 5.\",\"📍 Node 5 glyph pressure exceeded 77 glyphs/sec.\",\"⛏️ DigumMine overflow — reflection dig unsafe.\",\"🎙️ EchoLog #5-NOVA: 'This place remembers you.'\",\"💽 CanonFather's eye twitched at 03:37am. Logged.\"];const CanonTicker=/*#__PURE__*/React.memo(function CanonTicker(){const[isGlitching,setIsGlitching]=useState(false);const[ambientMessages,setAmbientMessages]=useState([]);const[overload,setOverload]=useState(false);useEffect(()=>{const interval=setInterval(()=>{const glitchNow=Math.random()<0.07;const loreNow=Math.random()<0.4;const timestamp=new Date().toLocaleTimeString();let newMsg='';if(glitchNow){newMsg=\"\\uD83D\\uDC80 GLYPHCORE ERROR: Canon breach @ \".concat(new Date().toISOString());}else if(loreNow){const lore=ambientLorePool[Math.floor(Math.random()*ambientLorePool.length)];newMsg=lore;if(lore.includes(\"CanonNode 5\")){setOverload(true);setTimeout(()=>setOverload(false),8000);}}else{newMsg=\"\\uD83D\\uDCE1 Shrine echo received at \".concat(timestamp);}setAmbientMessages(prev=>[...prev.slice(-50),newMsg]);if(glitchNow){setIsGlitching(true);setTimeout(()=>setIsGlitching(false),3000);}},12000);return()=>clearInterval(interval);},[]);const all=[...rawMessages,...ambientMessages].sort(()=>Math.random()-0.5);return/*#__PURE__*/_jsx(\"div\",{className:\"canon-ticker \".concat(isGlitching?'ticker-glitch':'',\" \").concat(overload?'ticker-overload':''),children:/*#__PURE__*/_jsx(\"div\",{className:\"ticker-track\",children:all.map((msg,i)=>/*#__PURE__*/_jsxs(\"span\",{className:\"ticker-message\",children:[msg,\"\\xA0\\xA0\\xA0\"]},i))})});});","map":{"version":3,"names":["React","useState","useEffect","validateTruthkey","logReflection","CanonMintFX","jsxs","_jsxs","jsx","_jsx","rawMessages","ambientLorePool","CanonTicker","memo","isGlitching","setIsGlitching","ambientMessages","setAmbientMessages","overload","setOverload","interval","setInterval","glitchNow","Math","random","loreNow","timestamp","Date","toLocaleTimeString","newMsg","concat","toISOString","lore","floor","length","includes","setTimeout","prev","slice","clearInterval","all","sort","className","children","map","msg","i"],"sources":["C:/Users/minin/canon-mirror/src/components/CanonPortal.jsx"],"sourcesContent":["// CanonPortal.jsx — CanonNode 5 Overload Mode Patch Active\r\nimport React, { useState, useEffect } from 'react';\r\nimport './CanonPortal.css';\r\nimport { validateTruthkey } from '../utils/truthkey';\r\nimport { logReflection } from './CanonLedger';\r\nimport CanonMintFX from './CanonMintFX';\r\n\r\nconst rawMessages = [\r\n  \"🔍 What lie hurt you the most?\",\r\n  \"🔍 What haven’t you forgiven yourself for?\",\r\n  \"🕶️ CanonFather was replaced in 2019.\",\r\n  \"📡 Shrine echo received.\",\r\n  \"💀 Canon breach acknowledged.\",\r\n];\r\n\r\nconst ambientLorePool = [\r\n  \"🧬 CanonNode 5 initiated glyph sequence 9Z-88.\",\r\n  \"🚨 Glyph integrity breach: echo loop overflowed.\",\r\n  \"🕸️ Reflection density fractured on Node 5B.\",\r\n  \"🔁 Shrine memory replayed a past unspoken phrase.\",\r\n  \"🕶️ Same & Old Shit observed glitch #0037 near node shelf.\",\r\n  \"🔦 Fragment 'Elmo_Awakened' decoded from sewer thread.\",\r\n  \"📡 BIDET fallback route triggered at CanonNode 5.\",\r\n  \"📍 Node 5 glyph pressure exceeded 77 glyphs/sec.\",\r\n  \"⛏️ DigumMine overflow — reflection dig unsafe.\",\r\n  \"🎙️ EchoLog #5-NOVA: 'This place remembers you.'\",\r\n  \"💽 CanonFather's eye twitched at 03:37am. Logged.\"\r\n];\r\n\r\nconst CanonTicker = React.memo(function CanonTicker() {\r\n  const [isGlitching, setIsGlitching] = useState(false);\r\n  const [ambientMessages, setAmbientMessages] = useState([]);\r\n  const [overload, setOverload] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const glitchNow = Math.random() < 0.07;\r\n      const loreNow = Math.random() < 0.4;\r\n      const timestamp = new Date().toLocaleTimeString();\r\n\r\n      let newMsg = '';\r\n      if (glitchNow) {\r\n        newMsg = `💀 GLYPHCORE ERROR: Canon breach @ ${new Date().toISOString()}`;\r\n      } else if (loreNow) {\r\n        const lore = ambientLorePool[Math.floor(Math.random() * ambientLorePool.length)];\r\n        newMsg = lore;\r\n        if (lore.includes(\"CanonNode 5\")) {\r\n          setOverload(true);\r\n          setTimeout(() => setOverload(false), 8000);\r\n        }\r\n      } else {\r\n        newMsg = `📡 Shrine echo received at ${timestamp}`;\r\n      }\r\n\r\n      setAmbientMessages(prev => [...prev.slice(-50), newMsg]);\r\n      if (glitchNow) {\r\n        setIsGlitching(true);\r\n        setTimeout(() => setIsGlitching(false), 3000);\r\n      }\r\n    }, 12000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const all = [...rawMessages, ...ambientMessages].sort(() => Math.random() - 0.5);\r\n\r\n  return (\r\n    <div className={`canon-ticker ${isGlitching ? 'ticker-glitch' : ''} ${overload ? 'ticker-overload' : ''}`}>\r\n      <div className=\"ticker-track\">\r\n        {all.map((msg, i) => (\r\n          <span key={i} className=\"ticker-message\">{msg}&nbsp;&nbsp;&nbsp;</span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}