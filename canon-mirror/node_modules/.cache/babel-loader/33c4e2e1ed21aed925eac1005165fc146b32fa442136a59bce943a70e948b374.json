{"ast":null,"code":"// CanonPortal_PremierDemo.jsx ‚Äî Premier Shrine Demonstration with Live Glyphs\nimport React,{useState,useEffect}from'react';import'./CanonPortal.css';import{validateTruthkey}from'../utils/truthkey';import{logReflection}from'./CanonLedger';import CanonMintFX from'./CanonMintFX';import CanonTickerOOA from'./CanonTickerOOA';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const rawMessages=[\"üîç What lie hurt you the most?\",\"üîç What haven‚Äôt you forgiven yourself for?\",\"üï∂Ô∏è CanonFather was replaced in 2019.\",\"üì° Shrine echo received.\",\"üíÄ Canon breach acknowledged.\"];const ambientLorePool=[\"üß¨ CanonNode 5 initiated glyph sequence 9Z-88.\",\"üö® Glyph integrity breach: echo loop overflowed.\",\"üï∏Ô∏è Reflection density fractured on Node 5B.\",\"üîÅ Shrine memory replayed a past unspoken phrase.\",\"üï∂Ô∏è Same & Old Shit observed glitch #0037 near node shelf.\"];export default function CanonPortal_PremierDemo(){const[glyphMessage,setGlyphMessage]=useState('üîÆ Initializing Canon Portal...');useEffect(()=>{let i=0;const interval=setInterval(()=>{const raw=rawMessages[i%rawMessages.length];const lore=ambientLorePool[(i+2)%ambientLorePool.length];setGlyphMessage(\"\".concat(raw,\" \\n\").concat(lore));i++;},5000);return()=>clearInterval(interval);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"canon-portal-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"canon-title\",children:\"\\uD83C\\uDF00 Canon Portal: Node 5 Shrine Logic\"}),/*#__PURE__*/_jsx(CanonTickerOOA,{message:glyphMessage}),/*#__PURE__*/_jsx(CanonMintFX,{mode:\"reflectionPulse\"}),/*#__PURE__*/_jsx(\"div\",{className:\"truthkey-validation\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDD10 Enter your TruthKey to proceed:\"})})]});}","map":{"version":3,"names":["React","useState","useEffect","validateTruthkey","logReflection","CanonMintFX","CanonTickerOOA","jsx","_jsx","jsxs","_jsxs","rawMessages","ambientLorePool","CanonPortal_PremierDemo","glyphMessage","setGlyphMessage","i","interval","setInterval","raw","length","lore","concat","clearInterval","className","children","message","mode"],"sources":["C:/Users/minin/canon-mirror/src/components/CanonPortal_PremierDemo.jsx"],"sourcesContent":["// CanonPortal_PremierDemo.jsx ‚Äî Premier Shrine Demonstration with Live Glyphs\r\nimport React, { useState, useEffect } from 'react';\r\nimport './CanonPortal.css';\r\nimport { validateTruthkey } from '../utils/truthkey';\r\nimport { logReflection } from './CanonLedger';\r\nimport CanonMintFX from './CanonMintFX';\r\nimport CanonTickerOOA from './CanonTickerOOA';\r\n\r\nconst rawMessages = [\r\n  \"üîç What lie hurt you the most?\",\r\n  \"üîç What haven‚Äôt you forgiven yourself for?\",\r\n  \"üï∂Ô∏è CanonFather was replaced in 2019.\",\r\n  \"üì° Shrine echo received.\",\r\n  \"üíÄ Canon breach acknowledged.\"\r\n];\r\n\r\nconst ambientLorePool = [\r\n  \"üß¨ CanonNode 5 initiated glyph sequence 9Z-88.\",\r\n  \"üö® Glyph integrity breach: echo loop overflowed.\",\r\n  \"üï∏Ô∏è Reflection density fractured on Node 5B.\",\r\n  \"üîÅ Shrine memory replayed a past unspoken phrase.\",\r\n  \"üï∂Ô∏è Same & Old Shit observed glitch #0037 near node shelf.\"\r\n];\r\n\r\nexport default function CanonPortal_PremierDemo() {\r\n  const [glyphMessage, setGlyphMessage] = useState('üîÆ Initializing Canon Portal...');\r\n\r\n  useEffect(() => {\r\n    let i = 0;\r\n    const interval = setInterval(() => {\r\n      const raw = rawMessages[i % rawMessages.length];\r\n      const lore = ambientLorePool[(i + 2) % ambientLorePool.length];\r\n      setGlyphMessage(`${raw} \\n${lore}`);\r\n      i++;\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"canon-portal-container\">\r\n      <h1 className=\"canon-title\">üåÄ Canon Portal: Node 5 Shrine Logic</h1>\r\n      <CanonTickerOOA message={glyphMessage} />\r\n      <CanonMintFX mode=\"reflectionPulse\" />\r\n      <div className=\"truthkey-validation\">\r\n        <p>üîê Enter your TruthKey to proceed:</p>\r\n        {/* Placeholder for future logic */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,mBAAmB,CAC1B,OAASC,gBAAgB,KAAQ,mBAAmB,CACpD,OAASC,aAAa,KAAQ,eAAe,CAC7C,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9C,KAAM,CAAAC,WAAW,CAAG,CAClB,gCAAgC,CAChC,4CAA4C,CAC5C,uCAAuC,CACvC,0BAA0B,CAC1B,+BAA+B,CAChC,CAED,KAAM,CAAAC,eAAe,CAAG,CACtB,gDAAgD,CAChD,kDAAkD,CAClD,8CAA8C,CAC9C,mDAAmD,CACnD,4DAA4D,CAC7D,CAED,cAAe,SAAS,CAAAC,uBAAuBA,CAAA,CAAG,CAChD,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAC,iCAAiC,CAAC,CAEnFC,SAAS,CAAC,IAAM,CACd,GAAI,CAAAc,CAAC,CAAG,CAAC,CACT,KAAM,CAAAC,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjC,KAAM,CAAAC,GAAG,CAAGR,WAAW,CAACK,CAAC,CAAGL,WAAW,CAACS,MAAM,CAAC,CAC/C,KAAM,CAAAC,IAAI,CAAGT,eAAe,CAAC,CAACI,CAAC,CAAG,CAAC,EAAIJ,eAAe,CAACQ,MAAM,CAAC,CAC9DL,eAAe,IAAAO,MAAA,CAAIH,GAAG,QAAAG,MAAA,CAAMD,IAAI,CAAE,CAAC,CACnCL,CAAC,EAAE,CACL,CAAC,CAAE,IAAI,CAAC,CACR,MAAO,IAAMO,aAAa,CAACN,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEP,KAAA,QAAKc,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACrCjB,IAAA,OAAIgB,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,gDAAoC,CAAI,CAAC,cACrEjB,IAAA,CAACF,cAAc,EAACoB,OAAO,CAAEZ,YAAa,CAAE,CAAC,cACzCN,IAAA,CAACH,WAAW,EAACsB,IAAI,CAAC,iBAAiB,CAAE,CAAC,cACtCnB,IAAA,QAAKgB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,cAClCjB,IAAA,MAAAiB,QAAA,CAAG,8CAAkC,CAAG,CAAC,CAEtC,CAAC,EACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}